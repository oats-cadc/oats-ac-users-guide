<?xml version='1.0' encoding='utf-8' ?>
<!DOCTYPE chapter PUBLIC "-//OASIS//DTD DocBook XML V4.5//EN" "http://www.oasis-open.org/docbook/xml/4.5/docbookx.dtd" [
<!ENTITY % BOOK_ENTITIES SYSTEM "oats_ac_users_guide.ent">
%BOOK_ENTITIES;
]>
<chapter id="chap-GroupsManagementClientInstall">
	<title>Access Control service groups management client</title>
	<para>
           The Access Control can be accessed to manage groups with different clients:
        </para>
<itemizedlist>
<listitem>
<para>The curl command line.</para>
</listitem>
<listitem>
<para>A java client, which is described in this guide.</para>
</listitem>
</itemizedlist>

<para>
	   This chapter explains how to download, build and install the 
Access Control service java command line client to manage groups. The software is java written and 
requires a java installation. 	
</para>


	<section id="sect-grp_mng_software_download">
		<title>Software download</title>
		<screen>
cd $MY_WORKING_DIR
git clone https://github.com/opencadc/ac
		</screen>
	</section>
	
	<section id="sect_grp_mng_software_build">
		<title>Access Control groups management client build</title>
		<screen>
cd $MY_WORKING_DIR/ac/cadc-access-control
gradle build
cd build/distributions/
tar -xvf cadc-access-control-x.y.z.tar
		</screen>
	</section>

	<section id="sect_grp_mng_software_install">
		<title>Access Control groups management client install and configuration</title>
		<screen>
cd $MY_WORKING_DIR/ac/cadc-access-control/build/distributions/
tar -xvf cadc-access-control-x.y.z.tar
		</screen>
<para>
Check the CLASSPATH variable set in $MY_WORKING_DIR/ac/cadc-access-control/build/distributions/cadc-access-control-x.y.z/bin/cadc-access-control
</para>

<para>
Two configuration files are needed in the home of the user running the client:
</para>
  <para>
   <screen>~/.dbrc file</screen>
The bind to LDAP is done as user 'webproxy'. The webproxy credentials are
stored in the file named .dbrc that must exist in the home directory of the
user running the web service. A template file can be found in:
<screen>
ac/cadc-access-control-server/.dbrc_example
</screen>
An example of this file is the following:
   <screen>
#server proxyuser proxyUserDN password driver serverURL
#&lt;server hostname&gt; &lt;proxyUser in LdapConfig.properties&gt; &lt;proxyUserLdapDN&gt; &lt;password&gt; N/A N/A
   </screen>
More than one user can be configured in this file as shown in the subsequent example:
   <screen>
devLdap uid=webproxy,ou=SpecialUsers,cd=inaf,dc=oats,dc=it uid=webproxy,ou=SpecialUsers,cd=inaf,dc=oats,dc=it peperone N/A N/A
devLdap uid=testproxy,ou=SpecialUsers,dc=testcanfar uid=testproxy,ou=SpecialUsers,dc=testcanfar peperone N/A N/A
   </screen>
  </para>

<para>
 <screen>~/config/LdapConfig.properties</screen>
There are three different connection pools to LDAP per web server:
one for read operations, one for write operations, and one for binding
as the calling user (for login and password change.)
All connections are made over TLS on port 636.  Pool and connection
information is configured in LdapConfig.properties file. It must exist
in the directory ~/config/ of the user running the web service.
A template of this file can be found in:
 <screen>ac/cadc-access-control-server/LdapConfig.properties</screen>
</para>
 <warning><para>
Care must be taken in configuring the same server host and proxyuser in
both <command>~/.dbrc</command> and <command>~/config/LdapConfig.properties</command>
      </para>
 </warning>

	</section>



</chapter>

